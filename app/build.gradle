/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'java-library'

}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation('org.springframework.data:spring-data-jpa:2.7.11')
    implementation 'org.springframework.boot:spring-boot-starter-web:2.7.11'
    implementation('org.springframework.boot:spring-boot-starter-jdbc:2.7.11')
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.11'
    implementation('org.springframework.boot:spring-boot-starter-webflux:2.7.11')

    implementation('com.google.cloud:google-cloud-translate:2.37.0')

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}



tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
